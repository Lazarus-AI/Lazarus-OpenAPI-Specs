{
    "openapi": "3.1.0",
    "info":
    {
        "title": "PII",
        "termsOfService": "https://www.lazarusai.com/legal",
        "contact":
        {
            "name": "Lazarus IT",
            "url": "https://lazarus-ai.atlassian.net/servicedesk/customer/portal/8",
            "email": "support@lazarusai.com"
        },
        "license":
        {
            "name": "Get Lazarus",
            "url": "https://emvnha23ura.typeform.com/lazarus-rikai?typeform-source=dashboard.lazarusai.com"
        },
        "version": "0.1.0"
    },
    "paths":
    {
        "/piiredact":
        {
            "post":
            {
                "summary": "Post Piiredact",
                "description": "Request piiredact",
                "operationId": "pii_redact_post",
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "$ref": "#/components/schemas/PIIRedactRequestBody"
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/PIIRedactResponseBody"
                                }
                            }
                        }
                    },
                    "400":
                    {
                        "description": "Invalid Request",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$defs":
                                    {
                                        "StatusEnum":
                                        {
                                            "type": "string",
                                            "enum":
                                            [
                                                "SUCCESS",
                                                "FAILURE"
                                            ],
                                            "title": "StatusEnum",
                                            "description": "Status enum for responses"
                                        }
                                    },
                                    "properties":
                                    {
                                        "status":
                                        {
                                            "$ref": "#/$defs/StatusEnum",
                                            "title": "status",
                                            "description": "Status of the request"
                                        },
                                        "message":
                                        {
                                            "type": "string",
                                            "title": "message",
                                            "description": "Information about the error"
                                        }
                                    },
                                    "type": "object",
                                    "required":
                                    [
                                        "status",
                                        "message"
                                    ],
                                    "title": "ErrorResponse",
                                    "description": "Error response schema"
                                },
                                "examples":
                                {
                                    "invalid_request_body":
                                    {
                                        "summary": "Invalid request body",
                                        "value":
                                        {
                                            "status": "FAILURE",
                                            "message": "Request is missing required field(s).",
                                            "missing_fields":
                                            [
                                                "file"
                                            ]
                                        }
                                    },
                                    "invalid_file_type":
                                    {
                                        "summary": "Request with unsupported file type",
                                        "value":
                                        {
                                            "status": "FAILURE",
                                            "message": "File type SVG is not supported. File must be a PDF, JPEG/JPG, TIFF/TIF, TXT or PNG."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401":
                    {
                        "description": "Invalid License",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$defs":
                                    {
                                        "StatusEnum":
                                        {
                                            "type": "string",
                                            "enum":
                                            [
                                                "SUCCESS",
                                                "FAILURE"
                                            ],
                                            "title": "StatusEnum",
                                            "description": "Status enum for responses"
                                        }
                                    },
                                    "properties":
                                    {
                                        "status":
                                        {
                                            "$ref": "#/$defs/StatusEnum",
                                            "title": "status",
                                            "description": "Status of the request"
                                        },
                                        "message":
                                        {
                                            "type": "string",
                                            "title": "message",
                                            "description": "Information about the error"
                                        }
                                    },
                                    "type": "object",
                                    "required":
                                    [
                                        "status",
                                        "message"
                                    ],
                                    "title": "ErrorResponse",
                                    "description": "Error response schema"
                                },
                                "examples":
                                {
                                    "expired_license":
                                    {
                                        "summary": "License expired",
                                        "value":
                                        {
                                            "status": "FAILURE",
                                            "message": "License is expired. Please contact Lazarus AI to get a new license file"
                                        }
                                    },
                                    "no_license":
                                    {
                                        "summary": "License not provided",
                                        "value":
                                        {
                                            "status": "FAILURE",
                                            "message": "License file does not exist"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500":
                    {
                        "description": "Internal error or model error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$defs":
                                    {
                                        "StatusEnum":
                                        {
                                            "type": "string",
                                            "enum":
                                            [
                                                "SUCCESS",
                                                "FAILURE"
                                            ],
                                            "title": "StatusEnum",
                                            "description": "Status enum for responses"
                                        }
                                    },
                                    "properties":
                                    {
                                        "status":
                                        {
                                            "$ref": "#/$defs/StatusEnum",
                                            "title": "status",
                                            "description": "Status of the request"
                                        },
                                        "message":
                                        {
                                            "type": "string",
                                            "title": "message",
                                            "description": "Information about the error"
                                        }
                                    },
                                    "type": "object",
                                    "required":
                                    [
                                        "status",
                                        "message"
                                    ],
                                    "title": "ErrorResponse",
                                    "description": "Error response schema"
                                },
                                "examples":
                                {
                                    "ocr_error":
                                    {
                                        "summary": "Cannot parse OCR results",
                                        "value":
                                        {
                                            "status": "FAILURE",
                                            "message": "Error parsing OCR result"
                                        }
                                    },
                                    "pii_error":
                                    {
                                        "summary": "PII model failure",
                                        "value":
                                        {
                                            "status": "FAILURE",
                                            "message": "Error extracting PII"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components":
    {
        "schemas":
        {
            "ContentRegion":
            {
                "properties":
                {
                    "polygon":
                    {
                        "items":
                        {
                            "type": "number"
                        },
                        "type": "array",
                        "title": "polygon",
                        "description": "Bounding box around page content, indicates content location on the page"
                    },
                    "content":
                    {
                        "type": "string",
                        "title": "content",
                        "description": "Content on page, words or fields"
                    },
                    "confidence":
                    {
                        "type": "number",
                        "maximum": 1.0,
                        "minimum": 0.0,
                        "title": "confidence",
                        "description": "Confidence in bounding box coordinates"
                    }
                },
                "type": "object",
                "required":
                [
                    "polygon"
                ],
                "title": "ContentRegion",
                "description": "Holds a region on a page and an optional content and confidence within"
            },
            "PIIRedactRequestBody":
            {
                "properties":
                {
                    "file":
                    {
                        "type": "string",
                        "title": "file",
                        "description": "Input file as a base64 encoded string"
                    },
                    "keywords":
                    {
                        "items":
                        {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "keywords",
                        "description": "Labels of additional fields to redact"
                    },
                    "redactColor":
                    {
                        "type": "string",
                        "enum":
                        [
                            "black",
                            "white"
                        ],
                        "title": "redactColor",
                        "description": "Color of redacted fields, black or white",
                        "default": "black"
                    }
                },
                "type": "object",
                "required":
                [
                    "file"
                ],
                "title": "PIIRedactRequestBody",
                "description": "/piiredact request body"
            },
            "PIIRedactResponseBody":
            {
                "properties":
                {
                    "status":
                    {
                        "$ref": "#/components/schemas/StatusEnum",
                        "title": "status",
                        "description": "Status of the request"
                    },
                    "redacted_file":
                    {
                        "$ref": "#/components/schemas/RedactedFile",
                        "title": "redactedFile",
                        "description": "The base64 encoded redacted file"
                    },
                    "items":
                    {
                        "items":
                        {
                            "$ref": "#/components/schemas/PageContent"
                        },
                        "type": "array",
                        "title": "items",
                        "description": "PII page contents as bounding boxes"
                    }
                },
                "type": "object",
                "required":
                [
                    "status",
                    "redacted_file",
                    "items"
                ],
                "title": "PIIRedactResponseBody",
                "description": "/piiredact response body"
            },
            "PageContent":
            {
                "properties":
                {
                    "dimension":
                    {
                        "$ref": "#/components/schemas/PageDimension",
                        "title": "dimension",
                        "description": "Page height and width"
                    },
                    "content_regions":
                    {
                        "anyOf":
                        [
                            {
                                "items":
                                {
                                    "$ref": "#/components/schemas/ContentRegion"
                                },
                                "type": "array"
                            }
                        ],
                        "title": "contentRegions",
                        "description": "Page content, confidence and bounding boxes"
                    }
                },
                "type": "object",
                "required":
                [
                    "dimension",
                    "content_regions"
                ],
                "title": "PageContent",
                "description": "Holds page dimensions and bounding boxes by page"
            },
            "PageDimension":
            {
                "properties":
                {
                    "height":
                    {
                        "type": "number",
                        "exclusiveMinimum": 0.0,
                        "title": "height",
                        "description": "Height of page"
                    },
                    "width":
                    {
                        "type": "number",
                        "exclusiveMinimum": 0.0,
                        "title": "width",
                        "description": "Width of page"
                    },
                    "unit":
                    {
                        "type": "string",
                        "title": "unit",
                        "description": "Unit for page height and width"
                    }
                },
                "type": "object",
                "required":
                [
                    "height",
                    "width"
                ],
                "title": "PageDimension",
                "description": "Holds dimension of a page"
            },
            "RedactedFile":
            {
                "properties":
                {
                    "data":
                    {
                        "type": "string",
                        "format": "binary",
                        "title": "bytes",
                        "description": "Redacted file data in encoded bytes"
                    },
                    "encoding":
                    {
                        "type": "string",
                        "title": "encoding",
                        "description": "Encoding of redacted file data"
                    }
                },
                "type": "object",
                "required":
                [
                    "data",
                    "encoding"
                ],
                "title": "RedactedFile",
                "description": "Holds redacted file data"
            },
            "StatusEnum":
            {
                "type": "string",
                "enum":
                [
                    "SUCCESS",
                    "FAILURE"
                ],
                "title": "StatusEnum",
                "description": "Status enum for responses"
            }
        }
    }
}